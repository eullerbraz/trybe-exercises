// 1
use('erp');

db.clientes.aggregate(
  [
    {
      $addFields: {
        idade: {
          $floor: {
            $divide: [
              {
                $subtract: ["$$NOW", "$dataNascimento"]
              },
              {
                $multiply: [1000 * 60 * 60 * 24 * 365],
              },
            ],
          },
        },
      },
    }
  ],
);

// 2
use('erp');

db.clientes.aggregate(
  [
    {
      $addFields: {
        idade: {
          $floor: {
            $divide: [
              {
                $subtract: ["$$NOW", "$dataNascimento"]
              },
              {
                $multiply: [1000 * 60 * 60 * 24 * 365],
              },
            ],
          },
        },
      },
    },
    {
      $match: {
        idade: {
          $gte: 18,
          $lte: 25
        },
      },
    },
    {
      $count: "totalClientes"
    },
  ],
);

// 3
use('erp');

db.clientes.aggregate(
  [
    {
      $addFields: {
        idade: {
          $floor: {
            $divide: [
              {
                $subtract: ["$$NOW", "$dataNascimento"]
              },
              {
                $multiply: [1000 * 60 * 60 * 24 * 365],
              },
            ],
          },
        },
      },
    },
    {
      $lookup: {
        from: "vendas",
        localField: "clienteId",
        foreignField: "clienteId",
        as: "compras",
      },
    },
  ],
);

// 4
use('erp');

db.clientes.aggregate(
  [
    {
      $addFields: {
        idade: {
          $floor: {
            $divide: [
              {
                $subtract: ["$$NOW", "$dataNascimento"]
              },
              {
                $multiply: [1000 * 60 * 60 * 24 * 365],
              },
            ],
          },
        },
      },
    },
    {
      $lookup: {
        from: "vendas",
        localField: "clienteId",
        foreignField: "clienteId",
        as: "compras",
      },
    },
    {
      $match: {
        compras: {
          $elemMatch: {
            dataVenda: {
              $gte: ISODate("2019-06-01"),
              $lte: ISODate("2020-03-31"),
            },
          },
        },
      },
    },
  ],
);

// 5
use('erp');

db.clientes.aggregate(
  [
    {
      $addFields: {
        idade: {
          $floor: {
            $divide: [
              {
                $subtract: ["$$NOW", "$dataNascimento"]
              },
              {
                $multiply: [1000 * 60 * 60 * 24 * 365],
              },
            ],
          },
        },
      },
    },
    {
      $lookup: {
        from: "vendas",
        localField: "clienteId",
        foreignField: "clienteId",
        as: "compras",
      },
    },
    {
      $match: {
        compras: {
          $elemMatch: {
            dataVenda: {
              $gte: ISODate("2019-06-01"),
              $lte: ISODate("2020-03-31"),
            },
          },
        },
      },
    },
  ],
).itcount();

// 6
use('erp');

db.clientes.aggregate(
  [
    {
      $addFields: {
        idade: {
          $floor: {
            $divide: [
              {
                $subtract: ["$$NOW", "$dataNascimento"]
              },
              {
                $multiply: [1000 * 60 * 60 * 24 * 365],
              },
            ],
          },
        },
      },
    },
    {
      $lookup: {
        from: "vendas",
        localField: "clienteId",
        foreignField: "clienteId",
        as: "compras",
      },
    },
    {
      $match: {
        compras: {
          $elemMatch: {
            dataVenda: {
              $gte: ISODate("2019-06-01"),
              $lte: ISODate("2020-03-31"),
            },
          },
        },
      },
    },
    {
      $group: {
        _id: "$endereco.uf",
        comprasQty: {
          $sum: {
            $size: "$compras"
          },
        },
      },
    },
    {
      $sort: {
        comprasQty: -1,      },
    },
    {
      $limit: 5,
    },
  ],
);

// 7
use('erp');

db.vendas.aggregate(
  [
    {
      $unwind: "$itens",
    },
    {
      $match: {
        "itens.nome": "QUEIJO PRATO",
      },
    },
    {
      $group: {
        _id: "$clienteId",
        totalConsumido: {
          $sum: "$itens.quantidade",
        },
      },
    },
    {
      $sort: {
        totalConsumido: -1,
      },
    },
    {
      $limit: 1,
    },
    {
      $lookup: {
        from: "clientes",
        localField: "_id",
        foreignField: "clienteId",
        as: "clienteInfo",
      },
    },
    {
      $unwind: "$clienteInfo"
    },
    {
      $project: {
        _id: false,
        nomeCliente: "$clienteInfo.nome",
        uf: "$clienteInfo.endereco.uf",
        totalConsumido: true,
      },
    },
  ],
);

// 8
use('erp');

db.vendas.aggregate(
  [
    {
      $match: {
        dataVenda: {
          $gte: ISODate("2020-03-01"),
          $lte: ISODate("2020-03-31"),
        },
        status: "EM SEPARACAO"
      },
    },
    {
      $addFields: {
        dataEntregaPrevista: {
          $add: [
            "$dataVenda",
            1000 * 60 * 60 * 24 * 3, 
          ],
        },
      },
    },
    {
      $project: {
        _id: false,
        clienteId: true,
        dataVenda: true,
        dataEntregaPrevista: true,
      },
    },
  ],
);

// 9
use('erp');

db.vendas.aggregate(
  [
    {
      $match: {
        dataVenda: {
          $gte: ISODate("2020-03-01"),
          $lte: ISODate("2020-03-31"),
        },
        status: "EM SEPARACAO"
      },
    },
    {
      $addFields: {
        dataEntregaPrevista: {
          $add: [
            "$dataVenda",
            1000 * 60 * 60 * 24 * 3, 
          ],
        },
      },
    },
    {
      $project: {
        _id: false,
        clienteId: true,
        dataVenda: true,
        dataEntregaPrevista: true,
      },
    },
    {
      $group: {
        _id: null,
        minEntrega: {
          $min: "$dataEntregaPrevista"
        },
        maxEntrega: {
          $max: "$dataEntregaPrevista"
        },
      },
    },
    {
      $project: {
        _id: false,
        difEntrega: {
          $ceil: {
            $abs: {
              $divide: [
                {
                  $subtract: ["$minEntrega", "$maxEntrega"],
                },
                1000 * 60 * 60 * 24,
              ],
            },
          }
        },
      },
    },
  ],
);
